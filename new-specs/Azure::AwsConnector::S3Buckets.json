{
  "resource": "Azure::AwsConnector::S3Buckets",
  "version": "2024-12-01",
  "operations": [
    {
      "method": "GET",
      "path": "/subscriptions/{subscriptionId}/providers/Microsoft.AwsConnector/s3Buckets",
      "operationId": "S3Buckets_ListBySubscription",
      "pathParameters": [
        {
          "name": "subscriptionId",
          "required": true,
          "type": "string",
          "in": "path",
          "description": "(from URI template)"
        }
      ],
      "queryParameters": []
    },
    {
      "method": "GET",
      "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AwsConnector/s3Buckets",
      "operationId": "S3Buckets_ListByResourceGroup",
      "pathParameters": [
        {
          "name": "subscriptionId",
          "required": true,
          "type": "string",
          "in": "path",
          "description": "(from URI template)"
        },
        {
          "name": "resourceGroupName",
          "required": true,
          "type": "string",
          "in": "path",
          "description": "(from URI template)"
        }
      ],
      "queryParameters": []
    },
    {
      "method": "GET",
      "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AwsConnector/s3Buckets/{name}",
      "operationId": "S3Buckets_Get",
      "pathParameters": [
        {
          "name": "name",
          "required": true,
          "type": "string",
          "in": "path",
          "description": "Name of S3Bucket"
        },
        {
          "name": "subscriptionId",
          "required": true,
          "type": "string",
          "in": "path",
          "description": "(from URI template)"
        },
        {
          "name": "resourceGroupName",
          "required": true,
          "type": "string",
          "in": "path",
          "description": "(from URI template)"
        }
      ],
      "queryParameters": []
    },
    {
      "method": "PUT",
      "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AwsConnector/s3Buckets/{name}",
      "operationId": "S3Buckets_CreateOrReplace",
      "bodySchema": "S3Bucket",
      "requiredProperties": [],
      "optionalProperties": [
        "properties",
        "properties.arn",
        "properties.awsAccountId",
        "properties.awsProperties",
        "properties.awsProperties.accelerateConfiguration",
        "properties.awsProperties.accelerateConfiguration.accelerationStatus",
        "properties.awsProperties.accessControl",
        "properties.awsProperties.analyticsConfigurations",
        "properties.awsProperties.arn",
        "properties.awsProperties.bucketEncryption",
        "properties.awsProperties.bucketEncryption.serverSideEncryptionConfiguration",
        "properties.awsProperties.bucketName",
        "properties.awsProperties.corsConfiguration",
        "properties.awsProperties.corsConfiguration.corsRules",
        "properties.awsProperties.domainName",
        "properties.awsProperties.dualStackDomainName",
        "properties.awsProperties.intelligentTieringConfigurations",
        "properties.awsProperties.inventoryConfigurations",
        "properties.awsProperties.lifecycleConfiguration",
        "properties.awsProperties.lifecycleConfiguration.rules",
        "properties.awsProperties.loggingConfiguration",
        "properties.awsProperties.loggingConfiguration.destinationBucketName",
        "properties.awsProperties.loggingConfiguration.logFilePrefix",
        "properties.awsProperties.loggingConfiguration.targetObjectKeyFormat",
        "properties.awsProperties.loggingConfiguration.targetObjectKeyFormat.partitionedPrefix",
        "properties.awsProperties.loggingConfiguration.targetObjectKeyFormat.partitionedPrefix.partitionDateSource",
        "properties.awsProperties.loggingConfiguration.targetObjectKeyFormat.simplePrefix",
        "properties.awsProperties.metricsConfigurations",
        "properties.awsProperties.notificationConfiguration",
        "properties.awsProperties.notificationConfiguration.eventBridgeConfiguration",
        "properties.awsProperties.notificationConfiguration.eventBridgeConfiguration.eventBridgeEnabled",
        "properties.awsProperties.notificationConfiguration.lambdaConfigurations",
        "properties.awsProperties.notificationConfiguration.queueConfigurations",
        "properties.awsProperties.notificationConfiguration.topicConfigurations",
        "properties.awsProperties.objectLockConfiguration",
        "properties.awsProperties.objectLockConfiguration.objectLockEnabled",
        "properties.awsProperties.objectLockConfiguration.rule",
        "properties.awsProperties.objectLockConfiguration.rule.defaultRetention",
        "properties.awsProperties.objectLockConfiguration.rule.defaultRetention.days",
        "properties.awsProperties.objectLockConfiguration.rule.defaultRetention.mode",
        "properties.awsProperties.objectLockConfiguration.rule.defaultRetention.years",
        "properties.awsProperties.objectLockEnabled",
        "properties.awsProperties.ownershipControls",
        "properties.awsProperties.ownershipControls.rules",
        "properties.awsProperties.publicAccessBlockConfiguration",
        "properties.awsProperties.publicAccessBlockConfiguration.blockPublicAcls",
        "properties.awsProperties.publicAccessBlockConfiguration.blockPublicPolicy",
        "properties.awsProperties.publicAccessBlockConfiguration.ignorePublicAcls",
        "properties.awsProperties.publicAccessBlockConfiguration.restrictPublicBuckets",
        "properties.awsProperties.regionalDomainName",
        "properties.awsProperties.replicationConfiguration",
        "properties.awsProperties.replicationConfiguration.role",
        "properties.awsProperties.replicationConfiguration.rules",
        "properties.awsProperties.tags",
        "properties.awsProperties.versioningConfiguration",
        "properties.awsProperties.versioningConfiguration.status",
        "properties.awsProperties.websiteConfiguration",
        "properties.awsProperties.websiteConfiguration.errorDocument",
        "properties.awsProperties.websiteConfiguration.indexDocument",
        "properties.awsProperties.websiteConfiguration.redirectAllRequestsTo",
        "properties.awsProperties.websiteConfiguration.redirectAllRequestsTo.hostName",
        "properties.awsProperties.websiteConfiguration.redirectAllRequestsTo.protocol",
        "properties.awsProperties.websiteConfiguration.routingRules",
        "properties.awsProperties.websiteURL",
        "properties.awsRegion",
        "properties.awsSourceSchema",
        "properties.awsTags",
        "properties.provisioningState",
        "properties.publicCloudConnectorsResourceId",
        "properties.publicCloudResourceName"
      ],
      "pathParameters": [
        {
          "name": "name",
          "required": true,
          "type": "string",
          "in": "path",
          "description": "Name of S3Bucket"
        },
        {
          "name": "subscriptionId",
          "required": true,
          "type": "string",
          "in": "path",
          "description": "(from URI template)"
        },
        {
          "name": "resourceGroupName",
          "required": true,
          "type": "string",
          "in": "path",
          "description": "(from URI template)"
        }
      ],
      "queryParameters": []
    },
    {
      "method": "PATCH",
      "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AwsConnector/s3Buckets/{name}",
      "operationId": "S3Buckets_Update",
      "bodySchema": "S3BucketTagsUpdate",
      "requiredProperties": [],
      "optionalProperties": [
        "tags"
      ],
      "pathParameters": [
        {
          "name": "name",
          "required": true,
          "type": "string",
          "in": "path",
          "description": "Name of S3Bucket"
        },
        {
          "name": "subscriptionId",
          "required": true,
          "type": "string",
          "in": "path",
          "description": "(from URI template)"
        },
        {
          "name": "resourceGroupName",
          "required": true,
          "type": "string",
          "in": "path",
          "description": "(from URI template)"
        }
      ],
      "queryParameters": []
    },
    {
      "method": "DELETE",
      "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AwsConnector/s3Buckets/{name}",
      "operationId": "S3Buckets_Delete",
      "pathParameters": [
        {
          "name": "name",
          "required": true,
          "type": "string",
          "in": "path",
          "description": "Name of S3Bucket"
        },
        {
          "name": "subscriptionId",
          "required": true,
          "type": "string",
          "in": "path",
          "description": "(from URI template)"
        },
        {
          "name": "resourceGroupName",
          "required": true,
          "type": "string",
          "in": "path",
          "description": "(from URI template)"
        }
      ],
      "queryParameters": []
    }
  ]
}